plugins {
    id 'java-library'
    id 'war'
    id 'io.qameta.allure' version '2.8.1'
}

group 'com.example'
version '1.0-SNAPSHOT'

repositories {
    mavenCentral()
}

ext {
    allureVersion = '2.13.7'
    springCore='5.2.5.RELEASE'
    springData='1.9.5.RELEASE'
    gson='2.8.5'
    mongodriver='3.12.7'
    log4jcore='2.14.1'
    lombok='1.18.10'
    jacksonAnnotations='2.9.2'
    jacksonCore='2.9.0'
    gson='2.8.5'



}

sourceCompatibility = 1.8
targetCompatibility = 1.8

dependencies {
    implementation('com.codeborne:selenide:5.16.2')
    testImplementation("io.qameta.allure:allure-selenide:${allureVersion}")
    implementation('io.github.bonigarcia:webdrivermanager:4.2.0')
    testImplementation('org.slf4j:slf4j-simple:1.7.29')
    implementation("org.springframework:spring-core:${springCore}")
    implementation("org.springframework:spring-context:${springCore}")
    implementation("org.springframework:spring-test:${springCore}")
    implementation("org.springframework:spring-context-support:${springCore}")
    implementation("org.springframework.data:spring-data-mongodb:${springData}")
    implementation("com.google.code.gson:gson:${gson}")
    implementation("org.mongodb:mongo-java-driver:${mongodriver}")
    implementation("org.apache.logging.log4j:log4j-core:${log4jcore}")
    implementation("org.apache.logging.log4j:log4j-api:${log4jcore}")
    annotationProcessor 'org.projectlombok:lombok:1.18.10'
    implementation("com.fasterxml.jackson.core:jackson-annotations:${jacksonAnnotations}")
    implementation("com.fasterxml.jackson.core:jackson-core:${jacksonCore}")
    implementation("com.google.code.gson:gson:${gson}")
    providedCompile("org.projectlombok:lombok:1.18.10")
    testImplementation('org.testng:testng:7.1.0')
    testRuntime 'com.browserup:browserup-proxy-core:2.0.1'
}

test {
    useTestNG(){
        suites 'src/test/resources/testng.xml'
        useDefaultListeners = true
        outputDirectory = file("$projectDir/src/test/resources/reports")

    }
//    systemProperty "env",System.getProperty("env")
}
allure {
    autoconfigure = true
    version = "${allureVersion}"

    useTestNG {
        version = "${allureVersion}"
    }
}